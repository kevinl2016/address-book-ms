plugins {
  id 'org.springframework.boot' version '2.5.7'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'checkstyle'
  id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.mapstruct:mapstruct:1.4.2.Final'
  implementation 'io.springfox:springfox-boot-starter:3.0.0'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


checkstyle {
  toolVersion '9.3'
  checkstyleTest.enabled = true
  checkstyleMain.enabled = true
  configFile = rootProject.file('config/checkstyle/checkstyle.xml')
  configProperties = [
          'configDir': rootProject.file('config/checkstyle'),
          'baseDir': rootDir,
  ]
}

checkstyleMain {
  source ='src/main/java'
}

checkstyleTest {
  source ='src/test/java'
}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.withType(Checkstyle) {
  reports {
    xml.required = false
    html.required = true
    html.stylesheet resources.text.fromFile('config/checkstyle/checkstyle-noframes-sorted.xsl')
  }
}

task buildDockerImages(type: Exec, dependsOn: build) {
  workingDir rootDir
  commandLine "docker", "build", "-f", "Dockerfile", "-t", "demo/address-service", "."
}
